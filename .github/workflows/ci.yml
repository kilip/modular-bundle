name: CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  php-cs-fixer:
    name: PHP-CS-Fixer (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '8'
      fail-fast: false
    env:
      PHP_CS_FIXER_FUTURE_MODE: '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl, bcmath, curl, openssl, mbstring
          ini-values: memory_limit=-1
          tools: pecl, composer
          coverage: none
      - name: Cache Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-php${{ matrix.php }}
      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress
      - name: Run PHP-CS-Fixer fix
        run: ./vendor/bin/php-cs-fixer fix --dry-run --diff --ansi

  # psalm
  psalm:
    name: Psalm (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '8'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl, bcmath, curl, openssl, mbstring
          ini-values: memory_limit=-1
          tools: pecl, composer
          coverage: none
      - name: Cache Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-php${{ matrix.php }}
      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress
      - name: Run Psalm Analysis
        run: ./vendor/bin/psalm --threads=2 --shepherd --stats

  # phpstan
  phpstan:
    name: PHPStan (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '8'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl, bcmath, curl, openssl, mbstring
          ini-values: memory_limit=-1
          tools: pecl, composer
          coverage: none
      - name: Cache Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-php${{ matrix.php }}
      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress
      - name: Run PHP Stan Analyse
        run: ./vendor/bin/phpstan analyse --no-interaction --no-progress --ansi


  # phpspec
  phpspec:
    name: Spec (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '7.4'
          - '8.0'
        include:
          - php: '8.0'
            coverage: true
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl, bcmath, curl, openssl, mbstring
          ini-values: memory_limit=-1
          tools: pecl, composer
          coverage: pcov
      - name: Cache Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-php${{ matrix.php }}
      - name: Enable code coverage
        if: matrix.coverage
        run: echo "COVERAGE=1" >> $GITHUB_ENV
      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction --no-progress
      - name: Run Spec Testing
        run: |
          if [ "$COVERAGE" = '1' ]; then
            ./vendor/bin/phpspec run -f pretty -c phpspec.coverage.yml
          else
            ./vendor/bin/phpspec run -f pretty
          fi
      - name: Upload Scrutinizer coverage
        if: matrix.coverage
        continue-on-error: true
        run: |
          composer req --dev scrutinizer/ocular dev-master
          php ocular.phar code-coverage:upload --format=php-clover build/logs/clover.xml

  # phpunit
  phpunit:
    name: Unit (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '7.4'
          - '8.0'
        include:
          - php: '8.0'
            coverage: true
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl, bcmath, curl, openssl, mbstring
          ini-values: memory_limit=-1
          tools: pecl, composer
          coverage: pcov
      - name: Cache Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-php${{ matrix.php }}
      - name: Enable code coverage
        if: matrix.coverage
        run: echo "COVERAGE=1" >> $GITHUB_ENV
      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction --no-progress
      - name: Run Unit Testing
        run: |
          if [ "$COVERAGE" = '1' ]; then
            ./vendor/bin/phpunit --coverage-clover build/logs/clover.xml
          else
            ./vendor/bin/phpunit
          fi
      - name: Upload Scrutinizer coverage
        if: matrix.coverage
        continue-on-error: true
        run: |
          composer req --dev scrutinizer/ocular dev-master
          php ocular.phar code-coverage:upload --format=php-clover build/logs/clover.xml
